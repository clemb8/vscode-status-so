{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,SCAzBF,EAAOC,QAAUC,QAAQ,gB,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCpBA,eACA,QAEA,IAAIQ,EA8BJC,eAAeC,IACd,IAAIC,EAAgBC,EAAOC,UAAUC,iBAAmBF,EAAOC,UAAUC,iBAAiB,GAAGC,IAAIC,YAASV,EAC1G,MAAMW,QAVYC,EAUc,MAAMP,qCATvC,IAAIQ,SAAgB,CAACC,EAASC,KAC5BC,EAAQC,KAAKL,GAAK,CAACM,EAAKC,IACPL,EAAdI,EAAsBN,EAAM,UACjBO,IACZ,KALc,IAACP,EAWlB,IACC,MAAMQ,EAASC,KAAKC,MAAMX,GAC1BS,EAAOG,OAAOC,OAShB,SAAsBA,EAAgBC,GACrC,GAAc,WAAXD,EACFE,EAAc,gBAAiB,IAAIpB,EAAOqB,WAAW,sCAC/C,CACN,IAAIC,EAaN,SAAiCH,GAChC,IAAII,EAAiB,IAAIC,KAAKL,GAC1BM,EAAQ,IAAID,KACZE,EAAaC,KAAKC,IAAIL,EAAeM,UAAYJ,EAAMI,WAE3D,OADAC,QAAQC,IAAIL,GACLC,KAAKK,KAAKN,EAAa,MAC/B,CAnBiBO,CAAwBd,GAEtCC,EAAc,iBAAiBE,SADhCA,GAAY,EACqC,IAAItB,EAAOqB,WAAW,mCACtBzB,EAAgBsC,gB,CAEnE,CAlByBC,CAAarB,EAAOG,OAAOC,OAAQJ,EAAOG,OAAOM,gBAAkBH,EAAc,G,CACvG,MAAMgB,GACPhB,EAAc,G,CAKhB,CAaA,SAASA,EAAciB,EAAcH,GACpCtC,EAAgByC,KAAOA,EACvBzC,EAAgBsC,gBAAkBA,EAClCtC,EAAgB0C,MACjB,CAzDA,oBAAyBC,GAExBT,QAAQC,IAAI,8DAEZ,IAAIS,EAAaxC,EAAOyC,SAASC,gBAAgB,wBAAwB,KACxE1C,EAAO2C,OAAOC,uBAAuB,8BAA8B,IAEpEL,EAAQM,cAAcC,KAAKN,GAE3B5C,EAAkBI,EAAO2C,OAAOI,oBAAoB/C,EAAOgD,mBAAmBC,KAAM,GACpFrD,EAAgByC,KAAO,2BACvBzC,EAAgBsD,QAAU,uCAC1BX,EAAQM,cAAcC,KAAKlD,GAC3B2C,EAAQM,cAAcC,KAAK9C,EAAO2C,OAAOQ,uBAAuBrD,IAEhEF,EAAgB0C,OAEhBxC,GACD,EAkDA,wBAA8B,C","sources":["webpack://status-so/external commonjs \"vscode\"","webpack://status-so/external node-commonjs \"child_process\"","webpack://status-so/webpack/bootstrap","webpack://status-so/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport * as process from 'child_process';\n\nlet myStatusBarItem: vscode.StatusBarItem;\n\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\tconsole.log('Congratulations, your extension \"status-so\" is now active!');\n\n\tlet disposable = vscode.commands.registerCommand('status-so.helloWorld', () => {\n\t\tvscode.window.showInformationMessage('Hello World from status-SO!');\n\t});\n\tcontext.subscriptions.push(disposable);\n\n\tmyStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 1);\n\tmyStatusBarItem.text = 'Waiting for informations';\n\tmyStatusBarItem.tooltip = 'Current Organization Expiration Date';\n\tcontext.subscriptions.push(myStatusBarItem);\n\tcontext.subscriptions.push(vscode.window.onDidChangeWindowState(getStatusSO));\n\n\tmyStatusBarItem.show();\n\t\n\tgetStatusSO();\n}\n\nconst execShell = (cmd: string) =>\nnew Promise<string>((resolve, reject) => {\n  process.exec(cmd, (err, out) => {\n\tif (err) { return resolve(cmd + ' error!'); }\n\treturn resolve(out);\n  });\n});\n\nasync function getStatusSO() {\n\tlet workspaceRoot = vscode.workspace.workspaceFolders ? vscode.workspace.workspaceFolders[0].uri.fsPath : undefined;\n\tconst display = await execShell(`cd ${workspaceRoot} && sfdx force:org:display --json`);\n\ttry {\n\t\tconst infoSO = JSON.parse(display);\n\t\tinfoSO.result.status ? updateInfoSO(infoSO.result.status, infoSO.result.expirationDate) : modifyItemBar('');\n\t} catch(e) {\n\t\tmodifyItemBar('');\n\t}\n\t\n\n\t\n}\n\nfunction updateInfoSO(status: string, date: string) {\n\tif(status !== 'Active') {\n\t\tmodifyItemBar('Org Expired !', new vscode.ThemeColor('statusBarItem.errorBackground'));\n\t} else {\n\t\tlet diffDays = calculateDifferenceDays(date);\n\t\tdiffDays <= 2 ? \n\t\t\tmodifyItemBar(`Org expire in ${diffDays} days`, new vscode.ThemeColor('statusBarItem.warningBackground')) :\n\t\t\tmodifyItemBar(`Org expire in ${diffDays} days`, myStatusBarItem.backgroundColor);\n\t}\n}\n\nfunction modifyItemBar(text: string, backgroundColor?: vscode.ThemeColor) {\n\tmyStatusBarItem.text = text;\n\tmyStatusBarItem.backgroundColor = backgroundColor;\n\tmyStatusBarItem.show();\n}\n\nfunction calculateDifferenceDays(date: string) {\n\tlet expirationDate = new Date(date);\n\tlet today = new Date();\n\tlet difference = Math.abs(expirationDate.getTime() - today.getTime());\n\tconsole.log(difference);\n\treturn Math.ceil(difference / (1000 * 3600 * 24)); \n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","myStatusBarItem","async","getStatusSO","workspaceRoot","vscode","workspace","workspaceFolders","uri","fsPath","display","cmd","Promise","resolve","reject","process","exec","err","out","infoSO","JSON","parse","result","status","date","modifyItemBar","ThemeColor","diffDays","expirationDate","Date","today","difference","Math","abs","getTime","console","log","ceil","calculateDifferenceDays","backgroundColor","updateInfoSO","e","text","show","context","disposable","commands","registerCommand","window","showInformationMessage","subscriptions","push","createStatusBarItem","StatusBarAlignment","Left","tooltip","onDidChangeWindowState"],"sourceRoot":""}